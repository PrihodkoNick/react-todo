{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","onChange","this","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","type","key","onClick","changeStatus","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoList","todos","elements","item","id","itemProps","Add","onLabelChange","onSubmit","preventDefault","onAddItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a427665f.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1 className=\"text-center text-info\">My Todo List</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = { term: \"\" };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Type here to search\"\r\n        onChange={this.onSearchChange}\r\n        value={this.state.term}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"done\", label: \"Done\" },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\" onClick={this.changeStatus}>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./todo-list-item.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      important,\r\n      done,\r\n    } = this.props;\r\n\r\n    // const { done, important } = this.state;\r\n\r\n    let classNames = \"d-flex justify-content-between todo-list-item\";\r\n    if (done) {\r\n      classNames += \" done\";\r\n    }\r\n\r\n    if (important) {\r\n      classNames += \" important\";\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={onToggleImportant}\r\n          >\r\n            <i className=\"fa fa-exclamation\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            onClick={onDeleted}\r\n          >\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </button>\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        {/* <TodoListItem label={item.label} important={item.important} /> */}\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import Add from \"./item-add-form\";\r\n\r\nexport default Add;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class itemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({ label: e.target.value }); // toUpperCase - keyprint only big letters\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({ label: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"What needs to be done\"\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Make awesome App\"),\r\n      this.createTodoItem(\"Have a lunch\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\", // active, all, done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      // todoData.splice(idx, 1); // not do THIS !!! you can't change state !!!\r\n\r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n      return { todoData: newArray };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem]; // concat\r\n\r\n      return { todoData: newArray };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.toggleProperty(todoData, id, \"important\") };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.toggleProperty(todoData, id, \"done\") };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter((item) => !item.done);\r\n      case \"done\":\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n          <SearchPanel onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <ItemAddForm onAddItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}